
WHY IONIC
1- using this library we can develop cross-platform apps with web technologies like Angular and React
2- Ionic is focused mainly on the look and feel, and UI interaction of your mobile app and website.
3- this library gives you readymade CSS and JS component for building  highly interactive apps.
4 - Devlop very Quicky 
5- Ionic apps are truly cross-platform: i.e  Use technology X to build for platform Y, where X and Y 
traditionally aren’t the same.
6- Ionic allows you to use HTML/CSS/JS to build iOS apps, Android apps, PWAs,
 desktop apps, or apps for any other platform where the web runs.


Emulater and android sudio setup before Executa
Hybid Application 

-- Predefine multiple template like tab sidemenu and blank 

public appPages = [
    {
      title: 'Men',
      url: '/home',
      icon: 'male'
    },
    {
      title: 'Women',
      url: '/home',
      icon: 'female'
    },
    {
      title: 'Accessories',
      url: '/home',
      icon: 'cube'
    },
    {
      title: 'Profile',
      url: '/home',
      icon: 'person'
    },
    {
      title: 'logout',
      url: '/home',
      icon: 'log-out'
    }
  ];

Browser Menu html 

  <ion-toolbar *ngIf="isDesktop">
    <ion-title>
      <ion-button fill="clear" color="dark" size="large" routerLink="/tabs/home">
        CRAZY SHOPPING
      </ion-button>
      <ion-button fill="clear" color="dark" routerLink="/home">
        Men
      </ion-button>
      <ion-button fill="clear" color="dark" routerLink="/home">
        Women
      </ion-button>
      <ion-button fill="clear" color="dark" routerLink="/home">
        Accessories
      </ion-button>
      <ion-button fill="clear" color="dark" routerLink="/home">
        Profile
      </ion-button>
    </ion-title>
    <ion-button slot="end" fill="clear" class="ion-padding-end" color="dark">
      <ion-icon name="cart-outline" slot="icon-only"></ion-icon>
    </ion-button>
  </ion-toolbar>

 
 public categories=[];
 public clothes=[];
this.isDesktop = this.platform.is('desktop');
    this.categories = [
      { name: 'T Shirts', desc: 'Starting from ₹399', imgUrl: '/assets/tshirts.jpg' },
      { name: 'Winterwear', desc: 'Starting from ₹699', imgUrl: '/assets/winterwear.jpg' },
      { name: 'Formals', desc: 'Starting from ₹1999', imgUrl: '/assets/formals.jpg' },
      { name: 'Jackets', desc: 'Starting from ₹999', imgUrl: '/assets/jackets.jpg' }
    ];
    
	this.clothes = [
      { name: 'Women\'s Top', price: '1599', imgUrl: '/assets/clothes/top.jpg' },
      { name: 'Men\'s Jacket', price: '2999', imgUrl: '/assets/clothes/jacket.jpg' },
      { name: 'Men\'s Hoodie', price: '1999', imgUrl: '/assets/clothes/hoodie.jpg' },
      { name: 'Women\'s Skirt', price: '2599', imgUrl: '/assets/clothes/skirt.jpg' }
    ];
	
Copy object in home.component.ts and copy all images in assets/clothes/ and assets folder

Home Component View 

<br>
  <ion-item>
    <h3>Categories</h3>
  </ion-item>
  <ion-grid>
    <ion-row>
      <ion-col size-xl="3" size-md="6" size-xs="12" *ngFor="let c of categories">
        <ion-card>
          <img [src]="c.imgUrl" />
          <ion-card-header>
            <ion-card-subtitle>{{c.desc}}</ion-card-subtitle>
            <ion-card-title>{{c.name}}</ion-card-title>
          </ion-card-header>
          <ion-card-content>
          </ion-card-content>
        </ion-card>
      </ion-col>
    </ion-row>
  </ion-grid>
  <br><br>
  <ion-item>
    <h3>Trending Clothes</h3>
  </ion-item>
  <ion-grid>
    <ion-row>
      <ion-col size-xl="3" size-lg="4" size-md="6" size-xs="6" *ngFor="let c of clothes">
        <ion-card>
          <img [src]="c.imgUrl" />
          <ion-card-header>
            <ion-card-subtitle>{{c.name}}</ion-card-subtitle>
            <ion-card-title>₹{{c.price}}</ion-card-title>
          </ion-card-header>
          <ion-card-content>
          </ion-card-content>
        </ion-card>
      </ion-col>
    </ion-row>
  </ion-grid>
  
  